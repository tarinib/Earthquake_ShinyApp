shiny::runApp()
runApp()
install.packages("gganimate")
knitr::opts_chunk$set(echo = TRUE)
library(gganimate)
devtools::install_github("dgrtwo/gganimate")
library(gganimate)
runApp()
#Loading raw data
dat <- read_csv("database.csv")
eq_data <- dat %>%
select("Date", "Time", "Latitude", "Longitude", "Type", "Depth", "Magnitude", "Magnitude Type", "ID", "Status")
#Replacing spaces in column names with _
names(eq_data)<-names(eq_data)%>%
stringr::str_replace_all("\\s","_")
#Removing rows with NA values in time
eq_data <- eq_data[complete.cases(eq_data),]
#Adding year
eq_data <- eq_data %>%
mutate(Year= substring(Date,7,10))
#Map
world <- map_data("world")
world <- world[world$region != "Antarctica",] # intercourse antarctica
ggplot()+
geom_map(data=world, map=world,aes(x=long, y=lat, map_id=region), color="navy",fill="black")+
geom_point(data=eq_data,aes(x = Longitude, y = Latitude, frame=Year, color=Magnitude, size=Magnitude, alpha=0.1))+
scale_colour_gradient(low="gold", high="green")+
theme_classic()
View(eq_data)
runApp()
runApp()
runApp()
runApp()
View(eq_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
rsconnect::showLogs(account = "tarinib", appName = "Eq_Shiny")
library(devtools)
install.library("magick")
install.packages("magick")
library(magick)
runApp()
install.packages("leaflet")
library(leaflet)
eq_data %>%
leaflet() %>%
addTiles() %>%
addMarkers(lat=quake$Latitude, lng=quake$Longitude, clusterOptions = markerClusterOptions(),
popup= paste(quake$Type,
"<br><strong>Magnitude: </strong>", quake$Magnitude,
"<br><strong>Depth: </strong>", quake$Depth,
"<br><strong>Date: </strong>", quake$Date,
"<br><strong>Date: </strong>", quake$Time
))
eq_data %>%
leaflet() %>%
addTiles() %>%
addMarkers(lat=quake$Latitude, lng=eq_data$Longitude, clusterOptions = markerClusterOptions(),
popup= paste(eq_data$Type,
"<br><strong>Magnitude: </strong>", eq_data$Magnitude,
"<br><strong>Depth: </strong>", eq_data$Depth,
"<br><strong>Date: </strong>", eq_data$Date,
"<br><strong>Date: </strong>", eq_data$Time
))
eq_data %>%
leaflet() %>%
addTiles() %>%
addMarkers(lat=eq_data$Latitude, lng=eq_data$Longitude, clusterOptions = markerClusterOptions(),
popup= paste(eq_data$Type,
"<br><strong>Magnitude: </strong>", eq_data$Magnitude,
"<br><strong>Depth: </strong>", eq_data$Depth,
"<br><strong>Date: </strong>", eq_data$Date,
"<br><strong>Date: </strong>", eq_data$Time
))
eq_data %>%
leaflet() %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery") %>%
addMarkers(lat=eq_data$Latitude, lng=eq_data$Longitude, clusterOptions = markerClusterOptions(),
popup= paste(eq_data$Type,
"<br><strong>Magnitude: </strong>", eq_data$Magnitude,
"<br><strong>Depth: </strong>", eq_data$Depth,
"<br><strong>Date: </strong>", eq_data$Date,
"<br><strong>Date: </strong>", eq_data$Time
))
runApp()
runApp()
install.packages("shinydashboard")
library(shinydashboard)
library(shinyjs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(eq_data)
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(eq_data, aes(Magnitude))+
geom_histogram()+
theme_classic()
ggplot(eq_data, aes(Magnitude))+
geom_histogram(aes(color=Depth))+
theme_classic()
View(eq_data)
ggplot(eq_data, aes(Magnitude))+
geom_histogram(color="green")+
theme_classic()
ggplot(eq_data, aes(Magnitude))+
geom_histogram(fill="green")+
theme_classic()
ggplot(eq_data, aes(Magnitude))+
geom_histogram(aes(fill=Depth))+
theme_classic()
runApp()
install.packages("shinyLP")
runApp()
runApp()
runApp()
runApp()
runApp()
