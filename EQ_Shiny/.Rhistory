#geom_line(data=data.frame(x=flu_data$WEEK, y=predict(fit_2)), mapping=aes(flu_data$WEEK,flu_data$PERCENT_POSITIVES, color="yellow"))+
#theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_point(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))
geom_line(data=data.frame(x=flu_data$WEEK, y=predict(fit_2)), mapping=aes(flu_data$WEEK,flu_data$PERCENT_POSITIVES, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_point(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue", size=3))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow",size=3))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue", size=2))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow",size=3))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue", size=1.5))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow",size=1.5))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue", size=1))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow",size=1))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow",size=1))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow",size=0.5))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.3)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.7)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="blue"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="yellow"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("6 knots","11 knots"))+
theme_bw()
#Location of knots
knots_1 <- ns(flu_data$WEEK, knots=c(10, 20, 40))
knots_2 <- ns(flu_data$WEEK, knots=c(8, 20, 33, 37))
x <- flu_data$WEEK
y <- flu_data$PERCENT_POSITIVES
#knots_1 <- ns(x, knots=seq(min(x),max(x),10))
#knots_2 <- ns(x, knots=seq(min(x),max(x),5))
fit_1 <- lm(y ~ knots_1)
summary(fit_1)
fit_2 <- lm(y ~ knots_2)
summary(fit_2)
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("6 knots","11 knots"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","4 knots"))+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","4 knots"))+
labs(titile="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","4 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
#Location of knots
knots_1 <- ns(flu_data$WEEK, knots=c(10, 20, 40))
knots_2 <- ns(flu_data$WEEK, knots=min(x),max(x), 10)
x <- flu_data$WEEK
y <- flu_data$PERCENT_POSITIVES
fit_1 <- lm(y ~ knots_1)
summary(fit_1)
fit_2 <- lm(y ~ knots_2)
summary(fit_2)
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","4 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
#Location of knots
knots_1 <- ns(flu_data$WEEK, knots=c(10, 20, 40))
knots_2 <- ns(flu_data$WEEK, knots=seq(min(x),max(x), 10))
x <- flu_data$WEEK
y <- flu_data$PERCENT_POSITIVES
fit_1 <- lm(y ~ knots_1)
summary(fit_1)
fit_2 <- lm(y ~ knots_2)
summary(fit_2)
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","4 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","10 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
#Location of knots
knots_1 <- ns(flu_data$WEEK, knots=c(10, 20, 32, 40))
knots_2 <- ns(flu_data$WEEK, knots=seq(min(x),max(x), 10))
x <- flu_data$WEEK
y <- flu_data$PERCENT_POSITIVES
fit_1 <- lm(y ~ knots_1)
summary(fit_1)
fit_2 <- lm(y ~ knots_2)
summary(fit_2)
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","10 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
#Location of knots
knots_1 <- ns(flu_data$WEEK, knots=c(10, 20, 32, 40))
knots_2 <- ns(flu_data$WEEK, knots=seq(min(x),max(x), 15))
x <- flu_data$WEEK
y <- flu_data$PERCENT_POSITIVES
fit_1 <- lm(y ~ knots_1)
summary(fit_1)
fit_2 <- lm(y ~ knots_2)
summary(fit_2)
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","10 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="green", "c2"="red"), labels=c("3 knots","15 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
ggplot(flu_data, aes(x, y))+
geom_line(aes(group=YEAR), alpha=0.1)+
geom_line(data=data.frame(x=x, y=predict(fit_1)), mapping=aes(x, y, color="c1"))+
geom_line(data=data.frame(x=x, y=predict(fit_2)), mapping=aes(x,y, color="c2"))+
scale_color_manual(name="", values = c("c1"="blue", "c2"="red"), labels=c("3 knots","15 knots"))+
labs(title="Spline interpolation over data with different knots configuration", x="Week", y="Percent Positives")+
theme_bw()
flow_data <- read_csv("data/flow.csv")
flow_data <- read_csv("data/flow.csv")
View(flow_data)
suppressPackageStartupMessages(library(lubridate))
flow_data <- read_csv("data/flow.csv")
flow_data$y_day <- yday(flow_data$date)
View(flow_data)
View(flow_data)
ggplot(flow_data,aes(y_day,flow))+
geom_point()
ggplot(flow_data,aes(y_day,flow))+
geom_smooth(method="loess", span=0.1)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
gem_point(alpha=0.3)+
geom_smooth(method="loess", span=0.1)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.3)+
geom_smooth(method="loess", span=0.1)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.1)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.1)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=10)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.001)+
geom_smooth(method="loess", span=0.1)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=10)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.001)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=10)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.009)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.009)+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=1, color="red")+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=10, color="green")+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.009)+
labs(title="Kernel smoothing with span = 0.009", x="Day of year", y="Flow")+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=0.1, color="red")+
labs(title="Kernel smoothing with span = 0.1", x="Day of year", y="Flow")+
theme_bw()
ggplot(flow_data,aes(y_day,flow))+
geom_point(alpha=0.1)+
geom_smooth(method="loess", span=5, color="green")+
labs(title="Kernel smoothing with span = 5", x="Day of year", y="Flow")+
theme_bw()
# My choice of smoothing parameter is 0.1
#Degree 0
model_0 <- loess(flow_data$flow ~ flow_data$y_day, span=0.1, degree=0)
#Degree 1
model_1 <- loess(flow_data$flow ~ flow_data$y_day, span=0.1, degree=1)
#Degree 2
model_2 <- loess(flow_data$flow ~ flow_data$y_day, span=0.1, degree=2)
#Visualization
ggplot(flow_data, aes(flow, y_day))+
geom_point(aes(flow,y_day), alpha=0.1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_0)), mapping=aes(x,y,color="c1"))+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_1)), mapping=aes(x,y,color="c2"))+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_2)), mapping=aes(x,y,color="c3"))+
theme_bw()
#Visualization
ggplot(flow_data, aes(flow, y_day))+
geom_point(aes(y_day,flow), alpha=0.1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_0)), mapping=aes(x,y,color="c1"))+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_1)), mapping=aes(x,y,color="c2"))+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_2)), mapping=aes(x,y,color="c3"))+
theme_bw()
#Visualization
ggplot(flow_data, aes(flow, y_day))+
geom_point(aes(y_day,flow), alpha=0.1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_0)), mapping=aes(x,y,color="c1"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_1)), mapping=aes(x,y,color="c2"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_2)), mapping=aes(x,y,color="c3"),size=1)+
theme_bw()
# My choice of smoothing parameter is 0.1
#Degree 0
model_0 <- loess(flow_data$flow ~ flow_data$y_day, span=0.1, degree=0)
#Degree 1
model_1 <- loess(flow_data$flow ~ flow_data$y_day, span=0.1, degree=1)
#Degree 2
model_2 <- loess(flow_data$flow ~ flow_data$y_day, span=0.1, degree=2)
#Visualization
ggplot(flow_data, aes(flow, y_day))+
geom_point(aes(y_day,flow), alpha=0.1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_0)), mapping=aes(x,y,color="c1"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_1)), mapping=aes(x,y,color="c2"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_2)), mapping=aes(x,y,color="c3"),size=1)+
labs(title="Local polynomial with various degrees, smoothing = 0.1", x="Day of year", y="Flow")+
theme_bw()
#Visualization
ggplot(flow_data, aes(flow, y_day))+
geom_point(aes(y_day,flow), alpha=0.1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_0)), mapping=aes(x,y,color="c1"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_1)), mapping=aes(x,y,color="c2"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_2)), mapping=aes(x,y,color="c3"),size=1)+
labs(title="Local polynomial with various degrees, smoothing = 0.1", x="Day of year", y="Flow")+
scale_color_manual(name="Degree", values=c("c1"="red", "c2"="blue", "c3"="green"), labels=c("0", "1", "2"))+
theme_bw()
#Visualization
ggplot(flow_data, aes(flow, y_day))+
geom_point(aes(y_day,flow), alpha=0.1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_0)), mapping=aes(x,y,color="c1"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_1)), mapping=aes(x,y,color="c2"),size=1)+
geom_line(data=data.frame(x=flow_data$y_day, y=predict(model_2)), mapping=aes(x,y,color="c3"),size=1)+
labs(title="Local polynomial with various degrees, smoothing parameter = 0.1", x="Day of year", y="Flow")+
scale_color_manual(name="Degree", values=c("c1"="red", "c2"="blue", "c3"="green"), labels=c("0", "1", "2"))+
theme_bw()
plot(residual(model_0))
qqnorm(resid(model_1))
plot(model_1)
output <- matrix(ncol=9, nrow=100)
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + y_ran
lm_mod <- lm(y_ran ~ x_ran)
output[i,] <- predict(lm_mod, new_data=c(-4,-3,-2,-1,0,1,2,3,4))
}
y_ran <- x_ran + e_ran
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
output[i,] <- predict(lm_mod, new_data=c(-4,-3,-2,-1,0,1,2,3,4))
}
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
predict(lm_mod)
test <- [1,2,3,4]
test <- c(1,2,3,4)
test
predict(lm_mod, newdata = test)
test <- data.frame(y_ran=c(1.7, 2.4, 3.6))
predict(lm_mod, newdata = test)
test
test <- data.frame(test_y=c(1.7, 2.4, 3.6))
predict(lm_mod, newdata = test)
test <- data.frame(y_ran=-4:4)
test
predict(lm_mod,new_data=test)
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
output <- matrix(ncol=9, nrow=100)
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
output[i,] <- predict(lm_mod, new_data=data.frame(y_ran=-4:4))
}
output <- matrix(nrow=100)
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
output[i,] <- predict(lm_mod, new_data=data.frame(y_ran=-4:4))
}
output <- matrix(ncol=100,nrow=100)
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
output[i,] <- predict(lm_mod, new_data=data.frame(y_ran=-4:4))
}
test <- data.frame(x_ran=-4:4)
test
predict(lm_mod,newdata = test)
output <- matrix(ncol=9,nrow=100)
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
output[i,] <- predict(lm_mod, new_data=data.frame(x_ran=-4:4))
}
output <- matrix(ncol=9,nrow=100)
for (i in 1:101){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
new_dat <- data.frame(x_ran=-4:4)
output[i,] <- predict(lm_mod, new_data=new_dat)
}
output <- matrix(ncol=9,nrow=100)
for (i in 1:100){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
new_dat <- data.frame(x_ran=-4:4)
output[i,] <- predict(lm_mod, new_data=new_dat)
}
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
new_dat <- data.frame(x_ran=-4:4)
output[i,] <- predict(lm_mod, new_data=new_dat)
View(output)
predict(lm_mod, new_data=new_dat)
new_dat <- data.frame(x_ran=-4:4)
new_dat
output <- matrix(ncol=9,nrow=100)
for (i in 1:100){
x_ran <- rnorm(100,0,1)
e_ran <- rnorm(100,0,1)
y_ran <- x_ran + e_ran
lm_mod <- lm(y_ran ~ x_ran)
new_dat <- data.frame(x_ran=-4:4)
output[i,] <- predict(lm_mod, newdata=new_dat)
}
output <- data.frame(output)
View(output)
View(output)
ggplot(output) +
geom_point(aes(output[1,1:9]))
output[1,1:9]
ggplot() +
geom_point(aes(output[1,1:9]))
ggplot() +
geom_point(aes(-4:4,output[1,1:9]))
ggplot() +
geom_point(aes(x=-4:4,y=output[1,1:9]))
ggplot() +
geom_point(aes(x=[-4:4],y=output[1,1:9]))
ggplot() +
geom_point(aes(x_ran,y=output[1,1:9]))
output[1,1:9]
ggplot(output,aes(x=output[1,1:9])) +
geom_dotplot()
length(output[1,1:9])
length(x_ran)
test=-4:4
length(test)
test=-4:4
ggplot(output,aes(x=test, y=output[1,1:9])) +
geom_dotplot()
output[1,1]
output[1,2]
output[1,9]
output[1,10]
ggplot(output,aes(x=test, y=output[1,1:9])) +
geom_point()
ggplot(output) +
geom_point(aes(x=test, y=output[1,1:9]))
shiny::runApp('~/Documents/Earthquake_ShinyApp/EQ_Shiny')
runApp('~/Documents/Earthquake_ShinyApp/EQ_Shiny')
getwd()
setwd("~/Documents/Earthquake_ShinyApp/EQ_Shiny")
#----------------------------------------------------------------------------------------------------------------
####DATA WRANGLING
#----------------------------------------------------------------------------------------------------------------
#Loading raw data
dat <- read_csv("database.csv")
View(dat)
eq_data <- dat %>%
filter(Type=="Earthuake") %>%
select("Date", "Time", "Latitude", "Longitude", "Type", "Depth", "Magnitude", "Magnitude Type", "ID", "Status")
eq_data <- dat %>%
filter(Type=="Earthquake") %>%
select("Date", "Time", "Latitude", "Longitude", "Type", "Depth", "Magnitude", "Magnitude Type", "ID", "Status")
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
